package spider

import (
	"fmt"
	"os"
	"strings"
	"sync"

	"github.com/echosoar/news/utils"
)

// [ [[a,b], [c, d]] ]，a 或 b，且，包含 c 或 d
// [ [[a,b], [-c, -d]] ]，a 或 b，且，后面跟随 c 或 d
var filterList [][][]string = [][][]string{
	// b
	{{"不"}, {"-负", "-忘", "-变", "-断"}},
	{{"奔跑"}},
	{{"百姓"}},
	{{"闭幕"}},
	{{"把"}, {"变成"}},
	// c
	{{"畅谈"}},
	{{"传统"}},
	{{"成"}, {"-长", "-绩", "-效", "-熟"}},
	{{"春"}, {"-天", "-色", "-风"}},
	{{"出"}, {"-发", "-版"}},
	{{"沉甸甸"}},
	{{"吹牛"}},
	// d
	{{"调研"}},
	{{"多美"}},
	{{"读懂"}},
	{{"的美"}},
	{{"当选", "任"}, {"省", "市", "局"}},
	{{"第"}, {"集"}},
	{{"大片"}},
	{{"惦念"}},
	{{"独家"}},
	{{"带货"}},
	// f
	{{"发"}, {"-挥", "-展", "-布"}},
	{{"防晒"}},
	{{"丰硕"}},
	{{"符号"}},
	{{"赋能"}},
	{{"复苏"}},
	{{"繁荣"}},
	{{"奋"}, {"-斗", "-进"}},
	{{"风光"}},
	{{"非凡"}},
	{{"访"}, {"-问", "-谈", "-华"}},
	{{"浮沉"}},
	{{"福利"}},
	// g
	{{"关"}, {"-键", "-心"}},
	{{"关闭"}, {"品牌"}},
	{{"贡献力量"}},
	{{"刚刚"}},
	{{"格局"}},
	{{"观"}, {"-察", "-点"}},
	{{"给力"}},
	{{"更美好"}},
	{{"攻"}, {"-坚", "-关"}},
	{{"高质量"}},
	{{"改"}, {"-写", "-善", "-进"}},
	{{"改变"}, {"生活"}},
	{{"故事"}},
	{{"功勋"}},
	{{"共赢"}},
	{{"各地"}},
	{{"规模"}},

	// h
	{{"很潮"}},
	{{"惠民"}},
	{{"和人民"}},
	{{"航拍"}},
	{{"红火"}},
	{{"好帮手"}},
	{{"合力"}},
	{{"回"}, {"-升", "-来"}},
	{{"活力"}},
	{{"夯实"}},
	{{"会"}, {"-见", "-议", "-谈"}},
	{{"欢迎"}},
	// j
	{{"汲取"}, {"力量"}},
	{{"坚持"}, {"党"}},
	{{"坚守"}},
	{{"加"}, {"-快", "-强"}},
	{{"加速"}, {"创新", "-度"}},
	{{"聚焦"}},
	{{"精"}, {"-神", "-心"}},
	{{"焦虑"}},
	{{"基层"}},
	{{"讲"}, {"-话", "-述"}},
	{{"见"}, {"-证", "-闻"}},
	{{"急了"}},
	{{"近平"}},
	{{"建议"}},
	{{"敬献"}},
	{{"就业"}},
	{{"机遇"}},
	{{"记"}, {"-在", "-录"}},
	{{"纪律审查"}},
	{{"监察调查"}},
	{{"进驻"}},
	{{"接地气"}},
	// k
	{{"看"}, {"变化", "-中国"}},
	{{"可能"}},
	{{"科普"}},
	{{"开"}, {"-学", "-门红", "-局", "-启", "-除党籍", "-售"}},
	// l
	{{"log"}},
	{{"亮"}, {"-点", "-出"}},
	{{"旅行"}},
	{{"牢牢"}},
	{{"绿水青山"}},
	{{"聆听"}},
	{{"两会"}},
	{{"领会"}},
	{{"来了"}},
	{{"理政"}},
	{{"浪费"}},
	{{"历史"}},
	// m
	{{"嘛"}},
	{{"每天"}},
	{{"秘籍"}},
	{{"名字"}},
	{{"梦想"}},
	{{"迈进"}},
	{{"美"}, {"-食", "-丽", "-好"}},
	{{"明"}, {"-天", "-确"}},
	{{"面对面"}},
	{{"民"}, {"-主", "-心", "-生"}},
	{{"魅力"}},
	{{"描绘"}},
	{{"买家秀"}},
	{{"满足"}, {"需求"}},
	// n
	{{"年轻"}, {"-的", "-人"}},
	{{"暖"}, {"-人心", "-心"}},
	{{"逆袭"}},
	{{"难忘"}},
	{{"你我"}},
	// p
	{{"破茧"}},
	{{"评论"}},
	{{"平凡"}},
	{{"谱写"}},
	{{"飘扬"}},
	{{"跑出"}},
	{{"篇"}},
	// q
	{{"情缘"}},
	{{"青"}, {"-春", "-睐"}},
	{{"诠释"}},
	{{"前程"}},
	{{"群众"}},
	{{"期待"}},
	{{"潜力"}},
	// r
	{{"热"}, {"-评", "-爱", "-情", "-闹"}},
	{{"人才"}},
	{{"认识"}},
	{{"惹人"}},
	{{"韧性"}},
	// s
	{{"深化"}},
	{{"什么"}, {"体验"}},
	{{"授予"}, {"称号"}},
	{{"送好礼"}},
	{{"盛会"}},
	{{"胜利"}},
	{{"塑造"}},
	{{"守护"}},
	{{"时"}, {"-节", "-评"}},
	{{"视频"}},
	{{"思想"}},
	{{"速览"}},
	{{"山水"}},
	{{"收藏"}},
	{{"舒适"}},
	{{"书写"}},
	{{"岁月"}},
	{{"双开"}},
	{{"审查调查"}},
	{{"首发"}},
	{{"售价"}},
	{{"啥"}}, // 可能误伤
	{{"赏"}, {"花", "阳光"}},
	{{"收好"}},
	{{"史低"}},
	{{"手机"}, {"曝光", "发布", "首销"}},
	// t
	{{"探访"}},
	{{"提效"}},
	{{"提"}, {"-高", "-升"}, {"水平", "能力"}},
	{{"通道"}},
	{{"推进"}},
	{{"他们"}},
	{{"脱贫"}},
	{{"团结"}},
	{{"图强"}},
	{{"天堂"}},
	{{"视点"}},
	// w
	{{"完成"}},
	{{"为"}, {"人民", "党", "-啥", "-什么", "-何"}},
	{{"我"}, {"-们", "-喜欢"}},
	{{"文旅"}},
	{{"伟大"}},
	{{"微记录"}},
	{{"沃土"}},
	{{"委员"}},
	{{"温度"}},
	{{"网评"}},
	// x
	{{"兴趣"}},
	{{"新"}, {"-时代", "-场景"}},
	{{"新增"}, {"功能"}},
	{{"邂逅"}},
	{{"学习"}},
	{{"协商"}},
	{{"效率"}},
	{{"现代化"}},
	{{"消费"}},
	{{"信心"}},
	{{"乡愁"}},
	{{"幸福"}},
	{{"向好"}},
	{{"携手"}},
	{{"希望"}},
	// y
	{{"样子"}},
	{{"友谊"}},
	{{"摇篮"}},
	{{"涌现"}},
	{{"愿景"}},
	{{"引领"}},
	{{"硬核"}, {"广告"}},
	{{"有"}, {"意义", "-你的"}},
	{{"又到"}},
	// z
	{{"造福"}},
	{{"怎样"}},
	{{"自"}, {"-立", "-强", "-己", "-信", "-主"}},
	{{"之"}, {"-路", "-光"}},
	{{"走"}, {"-深", "-远", "-进"}},
	{{"在"}, {"-家里", "-民间"}},
	{{"这"}, {"-个", "-件"}},
	{{"中年"}},
	{{"振兴"}},
	{{"知识点"}},
	{{"专访"}},
	{{"扎"}, {"-根", "-实"}},
	{{"足迹"}},
	{{"致"}, {"-辞", "-富"}},
	{{"追梦"}},
	{{"主题"}},
	{{"中国"}, {"-式", "-特色", "-梦"}},
	{{"中"}, {"关系"}},
	{{"尊重"}},
	{{"综述"}},
	{{"震撼"}},
	{{"制度"}},
	{{"赚钱"}},
	{{"正"}, {"-当时", "-能量"}},
	{{"总书记"}},
	{{"征程"}},
	{{"嘱托"}},
	{{"治国"}},
	{{"座谈"}},
	{{"筑牢"}},
	{{"增进"}},
	{{"逐梦"}},

	// TODO: multi news
	{{"——"}},
	{{"；"}},
	{{"/"}},
	// copyright risk
	{{"《"}},
}

type NewsItem struct {
	Title  string
	Link   string
	Origin string
	Time   int64
}

type SpiderManager struct {
	list []Spider
}

var spiderManager = &SpiderManager{
	list: make([]Spider, 0),
}

type Spider = func() []NewsItem

func Get() []NewsItem {
	spiderCount := len(spiderManager.list)
	var wg sync.WaitGroup
	wg.Add(spiderCount)
	channel := make(chan *[]NewsItem, spiderCount)
	for i := 0; i < spiderCount; i++ {
		go func(ch chan *[]NewsItem, index int, wg *sync.WaitGroup) {
			list := spiderManager.list[index]()
			ch <- &list
			wg.Done()
		}(channel, i, &wg)
	}
	go func() {
		wg.Wait()
		close(channel)
	}()
	newsItems := make([]NewsItem, 0)
	for ch := range channel {
		newsItems = append(newsItems, *ch...)
	}
	spiderName := os.Getenv("SPIDER")
	if spiderName != "" {
		fmt.Println("newsItems", newsItems)
	}
	return newsItems
}

var noFilterCache = os.Getenv("FILTER_DISABLE") == "true"

func IsNeedFilter(title string, moreFilterWords []string) bool {
	if noFilterCache {
		return false
	}
	for _, filterWord := range moreFilterWords {
		if strings.Contains(title, filterWord) {
			return true
		}
	}
	for _, filterWordGroup := range filterList {
		isNeedFilter := true
		// filterWordGroup 是多个分组，需要全部匹配到才可以
		preWorkMatchIndex := -1
		for _, wordlist := range filterWordGroup {
			// wordlist 多个字符串，只要其中之一匹配就可以了
			isWordMatch := false
			matchTitle := title
			if preWorkMatchIndex >= 0 {
				matchTitle = title[preWorkMatchIndex:]
			}
			for _, word := range wordlist {
				index := 0
				matched := false
				if word[0] == '-' {
					matched = strings.HasPrefix(matchTitle, word[1:])
				} else {
					index = strings.Index(matchTitle, word)
					matched = index >= 0
				}

				if matched {
					isWordMatch = true
					preWorkMatchIndex = index + len(word)
					break
				}
			}
			if !isWordMatch {
				isNeedFilter = false
				break
			}
		}
		if isNeedFilter {
			return true
		}
	}
	return false
}

func ItemToHtml(item *NewsItem) string {
	pubTime := ""
	if item.Time > 0 {
		pubTime = " - " + utils.FormatTime(item.Time, "01/02 15:04:05")
	}
	return "<a target=\"_blank\" href=\"" + item.Link + "\">" + item.Title + "</a> [" + item.Origin + pubTime + "]"
}
